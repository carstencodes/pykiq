name: PullRequest validation

on:
  pull_request:
    branches:
      - main
      - staging
      - development

jobs:
  lint:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: 
          - 3.7
          - 3.8
#          - 3.9
    
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2
      - name: Setup python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install linters
        run: | 
          python -m pip install --upgrade pip
          pip install flake8 pylint
          pip install -r requirements.txt
      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      - name: Run pylint
        run: pylint src/pykiq

  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: 
          - 3.7
          - 3.8
          - 3.9
    
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2
      - name: Setup python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install testing framework
        run: | 
          python -m pip install --upgrade pip
          pip install pytest pytest-cov
          pip install -r requirements.txt
      - name: Test with coverage
        run: pytest --cov=pykiq tests/

  package:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: 
          - 3.7
          - 3.8
          - 3.9
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2
      - name: Setup python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install packaging tools
        run: | 
          python -m pip install --upgrade pip
          pip install setuptools wheel
          pip install -r requirements.txt
      - name: Create package
        run: python setup.py bdist_wheel
